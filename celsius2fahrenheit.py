# -*- coding: utf-8 -*-
"""Celsius2Fahrenheit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dq9V1Y48SNBOqAvW07E0TPu2tupa8NQV
"""

import tensorflow as tf
tf.logging.set_verbosity(tf.logging.ERROR)
 
import numpy as np

celsius_q = np.array([-40,-10, 0, 8, 15, 22, 38], dtype=float)
fahrenheit_a = np.array([-40, 14, 32, 46, 59, 72, 100], dtype=float)

for i,c in enumerate(celsius_q):
  print("{} degress Celsius = {} degress Fahrenheit" .format(c, fahrenheit_a[i]))

l0 = tf.keras.layers.Dense(units=1, input_shape=[1])

model = tf.keras.Sequential([l0])

model.compile(loss ='mean_squared_error',
             optimizer= tf.keras.optimizers.Adam(0.1))

history = model.fit(celsius_q, fahrenheit_a, epochs =5000, verbose=False)
print('Finished Training Model')

import matplotlib.pyplot as plt
plt.xlabel('Epoch Number')
plt.ylabel("Loss Magnitude")
plt.plot(history.history['loss'])

print(model.predict([100.0]))

print('these are the layer variables; {}', format(l0.get_weights()))

